# use with: logging.config.dictConfig(yaml.load(open('logging.yaml', 'r')))

# Formatters detailed here: http://docs.python.org/2/library/logging.html#logrecord-attributes
version: 1
formatters:
  simple:
      format: '%(asctime)s:%(name)s:%(levelname)s:%(message)s'
  detail:
      format: '%(asctime)s:%(levelname)s:%(filename)s:%(funcName)s():%(lineno)d:%(message)s'

loggers:
  all:
    handlers: [all]
    propagate: true
  warn:
    handlers: [warn]
    propagate: true
  data_sync:
    handlers: [data_sync, console]
    propagate: false
    qualname: data_sync
  tornado:
    handlers: [all]
    propagate: false

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout
  all:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: simple
    maxBytes: 10485760
    backupCount: 4
    filename: ./log/all.log
  warn:
    class: logging.handlers.TimedRotatingFileHandler
    level: WARNING
    formatter: detail
    when: W0
    backupCount: 4
    filename: ./log/warn.log
  data_sync:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: simple
    when: W0
    backupCount: 4
    filename: ./log/data_sync.log

root:
  level: INFO
  handlers: [console, all, warn]
  propagate: true
